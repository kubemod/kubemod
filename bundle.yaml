apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    kubemod-system-namespace: "true"
  name: kubemod-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: modrules.api.kubemod.io
spec:
  group: api.kubemod.io
  names:
    kind: ModRule
    listKind: ModRuleList
    plural: modrules
    singular: modrule
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: ModRule is the Schema for the modrules API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ModRuleSpec defines the desired state of ModRule
          properties:
            match:
              description: Match is a list of match items which consist of select queries and expected match values or regular expressions. When all match items for an object are positive, the rule is in effect.
              items:
                description: MatchItem represents a single match query.
                properties:
                  matchRegex:
                    description: MatchRegex specifies the regular expression to compare the result of Select by. The match is considered positive if at least one of the results of evaluating the select query yields a match when compared to value.
                    nullable: true
                    type: string
                  matchValue:
                    description: MatchValue specifies the exact value to match the result of Select by. The match is considered positive if at least one of the results of evaluating the select query yields a match when compared to matchValue.
                    nullable: true
                    type: string
                  matchValues:
                    description: MatchValues specifies a list of values to match the result of Select by. The match is considered positive if at least one of the results of evaluating the select query yields a match when compared to any of the values in the array.
                    items:
                      type: string
                    type: array
                  negate:
                    description: Negate indicates whether the match result should be to inverted. Defaults to false.
                    type: boolean
                  select:
                    description: 'Select is a JSONPath query expression: https://goessner.net/articles/JsonPath/ which yields zero or more values. If no match value or regex is specified, if the query yields a non-empty result, the match is considered positive.'
                    type: string
                required:
                - select
                type: object
              minItems: 1
              type: array
            patch:
              description: Patch is a list of patch operations to perform on the matching resources at the time of creation. The value part of a patch operation can be a golang template which accepts the resource as its context. This field must be provided for ModRules of type "patch"
              items:
                description: PatchOperation represents a single JSON Patch operation.
                properties:
                  op:
                    description: Operation is the type of JSON Path operation to perform against the target element.
                    enum:
                    - add
                    - replace
                    - remove
                    type: string
                  path:
                    description: Path is the JSON path to the target element.
                    type: string
                  select:
                    description: 'Optional JSONPath query expression: https://goessner.net/articles/JsonPath/ used to construct path. A patch operation is created for each result of the query. A placeholder is created for each wildcard and filter in the expression. These placeholders can be used when constructing "path". For example, if select is "$.spec.containers[*].ports[?@.containerPort == 80]" placeholder #0 will point to the index of "containers" and #1 will point to the index of "ports". This allows us to define paths such as "/spec/template/spec/containers/#0/securityContext"'
                    type: string
                  value:
                    description: 'Value is the JSON representation of the modification. The value is a golang template which is evaluated against the context of the target resource. KubeMod performs some analysis of the result of the template evaluation in order to infer its JSON type: - If the value matches the format of a JavaScript number, it is considered to be a number. - If the value matches a boolean literal (true/false), it is considered to be a boolean literal. - If the value matches ''null'', it is considered to be null. - If the value is surrounded by double-quotes, it is considered to be a string. - If the value is surrounded by brackets, it is considered to be a JSON array. - If the value is surrounded by curly braces, it is considered to be a JSON object. - If none of the above is true, the value is considered to be a string.'
                    nullable: true
                    type: string
                required:
                - op
                - path
                type: object
              type: array
            type:
              description: 'Type describes the type of a ModRule. Valid values are: - "Patch" - the rule performs modifications on all the matching resources as they are created. - "Reject" - the rule rejects the creation of all matching resources.'
              enum:
              - Patch
              - Reject
              type: string
          required:
          - match
          - type
          type: object
        status:
          description: ModRuleStatus defines the observed state of ModRule
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubemod-crt
  namespace: kubemod-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubemod-crt
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - kubemod-mutating-webhook-configuration
  - kubemod-validating-webhook-configuration
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kubemod-manager
rules:
- apiGroups:
  - api.kubemod.io
  resources:
  - modrules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - api.kubemod.io
  resources:
  - modrules/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubemod-crt
  namespace: kubemod-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubemod-crt
subjects:
- kind: ServiceAccount
  name: default
  namespace: kubemod-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubemod-crt
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubemod-crt
subjects:
- kind: ServiceAccount
  name: default
  namespace: kubemod-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubemod-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubemod-manager
subjects:
- kind: ServiceAccount
  name: default
  namespace: kubemod-system
---
apiVersion: v1
kind: Service
metadata:
  name: kubemod-webhook-service
  namespace: kubemod-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: kubemod-operator
    control-plane: controller-manager
  name: kubemod-operator
  namespace: kubemod-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: kubemod-operator
      control-plane: controller-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/component: kubemod-operator
        control-plane: controller-manager
    spec:
      containers:
      - command:
        - /manager
        image: kubemod/kubemod:latest
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kubemod-crt-job
  namespace: kubemod-system
spec:
  backoffLimit: 4
  serviceAccountName: null
  template:
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - ./cert-renew.sh
        image: kubemod/kubemod-crt:v1.1.0
        name: kubemod-crt
      restartPolicy: Never
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: kubemod-mutating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: kubemod-webhook-service
      namespace: kubemod-system
      path: /mutate-api-kubemod-io-v1beta1-modrule
  failurePolicy: Fail
  name: mmodrule.kubemod.io
  rules:
  - apiGroups:
    - api.kubemod.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - modrules
- clientConfig:
    caBundle: Cg==
    service:
      name: kubemod-webhook-service
      namespace: kubemod-system
      path: /dragnet-webhook
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: dragnet.kubemod.io
  namespaceSelector:
    matchExpressions:
    - key: kubemod-system-namespace
      operator: NotIn
      values:
      - "true"
  reinvocationPolicy: IfNeeded
  rules:
  - apiGroups:
    - '*'
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - '*/*'
    scope: '*'
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: kubemod-validating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: kubemod-webhook-service
      namespace: kubemod-system
      path: /validate-api-kubemod-io-v1beta1-modrule
  failurePolicy: Fail
  name: vmodrule.kubemod.io
  rules:
  - apiGroups:
    - api.kubemod.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - modrules
